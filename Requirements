[Yesterday 11:43 AM] MIHAI-RÄ‚ZVAN ATANASOVLab 2 requirements
    Hello General
Here are the specific requirements for your next assignment (backend) together with some valuable resources you might want to check out to understand the concepts and examples.
Requirements:
- create a backend for your application using a language + framework of choice (ex: Java + Spring; Node.js + Express, etc)
- you should design your project using Model View Controller architecture, where View is your frontend app
- data should be persisted in memory
- have at least 5 APIs, responsible for providing data for all your entity-based features:
     - get all entities ("GET")
     - get one entity, based on ID ("GET")
     - create entity ("POST")
     - update entity ("PUT")
     - delete entity ("DELETE")
- test your APIs using Postman
- connect the frontend to the backend using API Requests (you can use libraries, ex. axios)
- manage data (state) on frontend globally, using built-in tools like context (built-in state management for React) or libraries like Redux
- have unit tests on all your features
Optional:
- sort, filter and pagination will be server-sided
- optimistic responses: update your frontend data optimistically before getting a response from the server
Relevant resources, but do not limit to :D
- RESTful API: https://restfulapi.net/
- create RESTful API with Java + Spring: https://spring.io/guides/tutorials/rest
- create RESTful API with Node.js + Express: https://expressjs.com/en/starter/basic-routing.html
